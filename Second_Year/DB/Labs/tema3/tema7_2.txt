Database Programming with SQL
7-2: Oracle Nonequijoins and Outer Joins


TRY IT/SOLVE IT:

1.
SELECT  d_events.name, d_packages.code
FROM d_events, d_packages
WHERE(d_events.cost BETWEEN d_packages.low_range AND d_packages.high_range)

2.
SELECT employees.last_name, employees.salary, job_grades.grade_level
FROM employees,job_grades
WHERE employees.salary BETWEEN job_grades.lowest_sal AND job_grades.highest_sal

3.
When there is no exact match (=) between columns of two tables, but still there is a relation hidden.

4.
WHERE  a.ranking >= g.lowest_rank AND a.ranking <= g. highest_rank

5.
If two columns have similar named columns and I want to identify them separately, even though I can use table full name, but alias is helpful. Alias helps to identify table with smaller word

6.
Nonequi join.

7.
SELECT f_customers.first_name ||' '|| f_customers.last_name "Customer Name", f_orders.order_number, f_orders.order_total, f_orders.order_date
FROM f_customers, f_orders
WHERE  f_customers.id = f_orders.cust_id(+);

8.
SELECT employees.last_name, employees.department_id, departments.department_name
FROM employees, departments
WHERE employees.department_id = departments.department_id(+);

9.
SELECT employees.last_name, employees.department_id, departments.department_name
FROM employees, departments
WHERE employees.department_id(+) = departments.department_id;

10.
a) eroare: a predicate may reference only one outer-joined table
   fix: WHERE e.department_id(+) = d.department_id;

b) eroare: "D"."DEPARTMENT_ID": invalid identifier
   fix: SELECT e.employee_id, e.last_name, d.location_id
		FROM employees e , departments d
		WHERE e.department_id = d.department_id(+);

11.
SELECT d_cds.title , d_track_listings.song_id
FROM  d_cds, d_track_listings
WHERE d_cds.cd_number = d_track_listings.cd_number(+) ;

12.
